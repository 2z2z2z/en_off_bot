name: Deploy EN Offline Bot

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test || echo "No tests defined yet"
    
    - name: Check syntax
      run: node -c index.js && node -c encounter-api.js

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: docker build -t en-offline-bot:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm -e BOT_TOKEN=test_token en-offline-bot:latest node -c index.js
    
    - name: Login to Docker Hub (optional)
      if: false  # Включите если хотите публиковать в Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Push to Docker Hub (optional)
      if: false  # Включите если хотите публиковать в Docker Hub
      run: |
        docker tag en-offline-bot:latest your-username/en-offline-bot:latest
        docker push your-username/en-offline-bot:latest